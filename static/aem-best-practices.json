{
  "lcp": [
    "## 1. **Title:** Defer Non-Essential JavaScript, SVGs, and jQuery from Critical Path\n\n*   **Description:** Several JavaScript files, decorative SVGs, and jQuery are loaded eagerly but are not essential for rendering the LCP. Deferring them will free up bandwidth and CPU for critical resources.\n *   **Implementation Priority:** Medium\n *   **Implementation Effort:** Medium\n *   **Details:**\n     *   **Lottie Animations & Player:** Defer `unpkg.com/@dotlottie/player-component` (and its chunks like `chunk-HDDX7F4A.mjs`) and the lottie animation file (`YVBP7LmN0o.lottie` from `lottie.host`) to be loaded in `loadLazy` or `loadDelayed` in `scripts.js`. Instantiate Lottie animations only when they become visible using an IntersectionObserver.\n     *   **Decorative SVGs:** Inline SVGs (`section-arc.svg`, `background-arc.svg`) identified in rule violations should be converted to `<img>` tags with `loading=\"lazy\"` attribute and appropriate `width`/`height` or loaded via CSS that is part of `lazy-styles.css` or block-specific CSS loaded lazily.\n     *   **jQuery:** Defer `jquery-3.7.1.min.js` (30KB) to `loadLazy` or `loadDelayed` if it's not strictly required for LCP rendering logic.\n     *   **Other Non-LCP Images:** Images from `assets.ups.com` (e.g., `urn:aaid:aem:8e7fc503...`, `urn:aaid:aem:8195feea...`) that are not the LCP element but are above the fold should be converted to `<img>` by JS with `loading=\"eager\"` and `fetchpriority=\"auto\"`. If below the fold, use `loading=\"lazy\"`. Ensure `width` and `height` are set.\n *   **Expected Impact:** LCP reduction of 300-600ms. INP improvement of 50-100ms.",
    "## 2. **Title:** Optimize Critical Rendering Path with Resource Hints\n\n*   **Description:** Implement resource hints to prioritize critical resources and preload essential assets for LCP optimization.\n*   **Implementation Priority:** High\n*   **Implementation Effort:** Low\n*   **Details:**\n    *   Add `<link rel=\"preload\" href=\"critical-image.jpg\" as=\"image\">` for LCP images\n    *   Use `<link rel=\"dns-prefetch\" href=\"//cdn.example.com\">` for external domains\n    *   Implement `<link rel=\"preconnect\" href=\"//fonts.googleapis.com\">` for web fonts\n    *   Add `<link rel=\"modulepreload\" href=\"critical-script.js\">` for critical JavaScript\n*   **Expected Impact:** LCP improvement of 200-400ms",
    "## 3. **Title:** Implement Image Optimization and Modern Formats\n\n*   **Description:** Convert images to modern formats and implement responsive images to reduce LCP time.\n*   **Implementation Priority:** Medium\n*   **Implementation Effort:** Medium\n*   **Details:**\n    *   Convert JPEG/PNG to WebP or AVIF formats\n    *   Implement `<picture>` element with multiple formats and sizes\n    *   Use `srcset` and `sizes` attributes for responsive images\n    *   Optimize image dimensions and compression\n*   **Expected Impact:** LCP reduction of 150-300ms"
  ],
  "cls": [
    "## 1. **Title:** Ensure Image Dimensions are Set for Dynamically Loaded Images\n\n*   **Description:** Many images on the page are initially `<a>` tags and are converted to `<img>` tags by JavaScript. If these images lack `width` and `height` attributes or `aspect-ratio` CSS, they can cause layout shifts when they load.\n*   **Implementation Priority:** Medium\n*   **Implementation Effort:** Medium\n*   **Details:**\n    *   Modify the JavaScript in `scripts.js` or block-specific scripts that transform `<a>` tags (especially those from `assets.ups.com`) into `<img>` tags.\n    *   Ensure the script adds explicit `width` and `height` attributes to the generated `<img>` tags.\n    *   Alternatively, define `aspect-ratio` for these images via CSS if their dimensions are responsive but maintain a consistent aspect ratio.\n*   **Expected Impact:** CLS reduction of <0.05, depending on how many images are affected.",
    "## 2. **Title:** Implement CSS Containment and Layout Stability\n\n*   **Description:** Use CSS containment properties to prevent layout shifts and improve Cumulative Layout Shift scores.\n*   **Implementation Priority:** Medium\n*   **Implementation Effort:** Low\n*   **Details:**\n    *   Add `contain: layout` to elements that don't affect layout\n    *   Use `contain: size` for elements with fixed dimensions\n    *   Implement `contain: paint` for elements that don't overflow\n    *   Set explicit dimensions for dynamic content containers\n*   **Expected Impact:** CLS reduction of 0.02-0.04"
  ],
  "inp": [
    "## 1. **Title:** Optimize JavaScript Execution and Reduce Main Thread Blocking\n\n*   **Description:** JavaScript execution on the main thread can block user interactions, leading to poor INP scores. Long tasks and excessive JavaScript execution should be optimized.\n*   **Implementation Priority:** High\n*   **Implementation Effort:** Medium\n*   **Details:**\n    *   Break down long JavaScript tasks into smaller chunks using `setTimeout` or `requestIdleCallback`.\n    *   Move non-critical JavaScript to web workers where possible.\n    *   Optimize event handlers to avoid blocking the main thread.\n    *   Use `passive: true` for scroll and touch event listeners.\n    *   Implement debouncing for input events.\n*   **Expected Impact:** INP improvement of 100-200ms."
  ]
}
